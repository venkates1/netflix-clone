{"version":3,"sources":["axios.js","request.js","components/Banner.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","table","map","onClick","movieTrailer","then","url","useParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAKeA,E,OAHEC,EAAMC,OAAO,CAC5BC,QAAS,iCCHLC,EAAU,mCAYDC,EAVE,CACbC,cAAc,+BAAD,OAAiCF,EAAjC,mBACbG,sBAAsB,wBAAD,OAAyBH,EAAzB,sBACrBI,cAAc,4BAAD,OAA6BJ,EAA7B,mBACbK,kBAAkB,2BAAD,OAA4BL,EAA5B,mBACjBM,kBAAkB,2BAAD,OAA4BN,EAA5B,mBACjBO,kBAAkB,2BAAD,OAA4BP,EAA5B,mBACjBQ,mBAAmB,2BAAD,OAA4BR,EAA5B,sBAClBS,mBAAmB,2BAAD,OAA4BT,EAA5B,sB,eCqCPU,MA3Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAbAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBlB,EAAMmB,IAAIf,EAASM,mBAD3C,cACQU,EADR,OAEEJ,EACEI,EAAQC,KAAKC,QACXC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQC,KAAKC,QAAQI,OAAS,KAJ/D,kBAOSN,GAPT,4CADc,uBAAC,WAAD,wBAUdO,KACC,IACHC,QAAQC,IAAId,GAEV,yBACEe,UAAU,SACVC,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,4CAAD,cAA8ClB,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOmB,cAArD,MACfC,mBAAoB,iBALxB,UAQE,sBAAKL,UAAU,mBAAf,UAEE,oBAAIA,UAAU,gBAAd,UACQ,OAALf,QAAK,IAALA,OAAA,EAAAA,EAAOqB,SAAP,OAAgBrB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOsB,QAAvB,OAA+BtB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOuB,iBAGzC,sBAAKR,UAAU,kBAAf,UACE,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAGF,oBAAIA,UAAU,sBAAd,gBAAqCf,QAArC,IAAqCA,OAArC,EAAqCA,EAAOwB,cAG9C,qBAAKT,UAAU,2B,MCRNU,MA/Bf,WACE,MAA2B1B,oBAAS,GAApC,mBAAO2B,EAAP,KAAaC,EAAb,KAcA,OAZAzB,qBAAU,WAQR,OAPA0B,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBH,GAAW,GAEXA,GAAW,MAGR,WACLC,OAAOG,oBAAoB,aAE5B,IAED,sBAAKhB,UAAS,cAASW,GAAQ,cAA/B,UACE,qBACEX,UAAU,YACViB,IAAI,4EACJC,IAAI,iBAEN,qBACElB,UAAU,cACViB,IAAI,gFACJC,IAAI,oB,iCC+CGC,MAjEf,YAA+C,IAAhCb,EAA+B,EAA/BA,MAAOc,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC9B,EAA4BrC,mBAAS,IAArC,mBAAOsC,EAAP,KAAeC,EAAf,KACA,EAAoCvC,mBAAS,IAA7C,mBAAOwC,EAAP,KAAmBC,EAAnB,KAwCA,OAvCAtC,qBAAU,WAAM,4CAId,4BAAAC,EAAA,sEACwBlB,EAAMmB,IAAI+B,GADlC,cACQ9B,EADR,OAEEiC,EAAUjC,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CAJc,0DASdO,KACC,CAACuB,IAEJtB,QAAQ4B,MAAMJ,GA4BZ,sBAAKtB,UAAU,MAAf,UACE,6BAAKM,IACL,qBAAKN,UAAU,eAAf,SACGsB,EACGA,EAAOK,KAAI,SAAC1C,GAAD,OACT,qBACiB2C,QAAS,kBAvBlB,SAAC3C,GAChBuC,EACDC,EAAc,IAGdI,KAAkB,OAAL5C,QAAK,IAALA,OAAA,EAAAA,EAAOsB,OAAQ,IAC3BuB,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAEnDV,EAAcO,EAAU3C,IAAI,SAG7B+C,OAAM,SAACC,GAAD,OAAWvC,QAAQC,IAAIsC,MAWUC,CAAYrD,IAC1Ce,UAAS,sBAAiBqB,GAAc,mBAA/B,KACTJ,IAAG,UAtDF,wCAsDE,OACDI,EAAapC,EAAMsD,YAActD,EAAMmB,eAEzCc,IAAKjC,EAAMsB,MALNtB,EAAMuD,OAQf,OAELhB,GAAc,cAAC,IAAD,CAASiB,QAASjB,EAAYkB,KA1CpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UCHDC,MAvBf,WACE,OACE,sBAAK/C,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,IACA,cAAC,EAAD,CACEM,MAAM,oBACNc,SAAU9C,EAASE,sBACnB6C,YAAU,IAEZ,cAAC,EAAD,CAAKf,MAAM,WAAWc,SAAU9C,EAASC,gBACzC,cAAC,EAAD,CAAK+B,MAAM,YAAYc,SAAU9C,EAASG,gBAC1C,cAAC,EAAD,CAAK6B,MAAM,gBAAgBc,SAAU9C,EAASI,oBAC9C,cAAC,EAAD,CAAK4B,MAAM,WAAWc,SAAU9C,EAASK,oBACzC,cAAC,EAAD,CAAK2B,MAAM,UAAUc,SAAU9C,EAASO,qBACxC,cAAC,EAAD,CAAKyB,MAAM,SAASc,SAAU9C,EAASM,oBACvC,cAAC,EAAD,CAAK0B,MAAM,gBAAgBc,SAAU9C,EAASQ,yBCZrCkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4ded4773.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;\r\n","const API_KEY = \"e7897ac95a83b21ced5e23d7dc44e8f1\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending//all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_networks=99`\r\n}\r\nexport default requests;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../request\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchHorrorMovies);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        {/* title */}\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        {/* buttons */}\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        {/* description */}\r\n        <h1 className=\"banner__description\">{movie?.overview}</h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 150) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n        alt=\"avatar logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState(\"\");\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  useEffect(() => {\r\n    // if [], run once when the row loads, and don't run again\r\n    //if [movies], then run every time the movie changes\r\n    //note : whenever there is any variable used inside useEffect which is pulled from outside, it must be included in [] as it shows its dependency\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  console.table(movies);\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if(trailerUrl){\r\n      setTrailerUrl(\"\");\r\n    }\r\n    else {\r\n      movieTrailer(movie?.name || \"\")\r\n      .then((url) => {\r\n        const useParams = new URLSearchParams(new URL(url).search);\r\n      // https://www.youtube.com/watch?v=8Qn_spdM5Zg\r\n        setTrailerUrl(useParams.get(\"v\"))\r\n\r\n      })\r\n      .catch((error) => console.log(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies\r\n          ? movies.map((movie) => (\r\n              <img\r\n                key={movie.id} onClick={() => handleClick(movie)}\r\n                className={`row__poster ${isLargeRow && \"row__posterLarge\"} `}\r\n                src={`${base_url}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import \"./App.css\";\nimport Banner from \"./components/Banner\";\nimport Nav from \"./components/Nav\";\nimport Row from \"./components/Row\";\nimport requests from \"./request\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Navbar */}\n      <Nav />\n      {/* Banner */}\n      <Banner />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}